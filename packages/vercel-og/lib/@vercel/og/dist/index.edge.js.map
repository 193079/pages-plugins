{"version":3,"sources":["../src/index.edge.ts"],"sourcesContent":["import type { ReactElement } from 'react'\nimport type { ImageResponseOptions } from './types'\n\n// @ts-ignore\nimport satori, { init as initSatori } from 'satori/wasm'\nimport initYoga from 'yoga-wasm-web'\nimport * as resvg from '@resvg/resvg-wasm'\n\n// @ts-ignore\nimport resvg_wasm from './resvg.wasm?module'\n// @ts-ignore\nimport yoga_wasm from './yoga.wasm?module'\n\nimport render from './og'\n\nconst initializedResvg = resvg.initWasm(resvg_wasm)\nconst initializedYoga = initYoga(yoga_wasm).then((yoga) => initSatori(yoga))\nconst fallbackFont = fetch(\n  new URL('./noto-sans-v27-latin-regular.ttf', import.meta.url)\n).then((res) => res.arrayBuffer())\n\nconst isDev = globalThis?.process?.env?.NODE_ENV === 'development'\n\nexport class ImageResponse {\n  constructor(element: ReactElement, options: ImageResponseOptions = {}) {\n    const result = new ReadableStream({\n      async start(controller) {\n        await initializedYoga\n        await initializedResvg\n        const fontData = await fallbackFont\n        const fonts = [\n          {\n            name: 'sans serif',\n            data: fontData,\n            weight: 700,\n            style: 'normal',\n          },\n        ]\n\n        const result = await render(satori, resvg, options, fonts, element)\n\n        controller.enqueue(result)\n        controller.close()\n      },\n    })\n\n    return new Response(result, {\n      headers: {\n        'content-type': 'image/png',\n        'cache-control': isDev\n          ? 'no-cache, no-store'\n          : 'public, immutable, no-transform, max-age=31536000',\n        ...options.headers,\n      },\n      status: options.status,\n      statusText: options.statusText,\n    })\n  }\n}\n"],"mappings":";;;;;AAIA;AACA;AACA;AAGA;AAEA;AAIA,IAAM,mBAAmB,AAAM,eAAS,UAAU;AAClD,IAAM,kBAAkB,SAAS,SAAS,EAAE,KAAK,CAAC,SAAS,WAAW,IAAI,CAAC;AAC3E,IAAM,eAAe,MACnB,IAAI,IAAI,qCAAqC,YAAY,GAAG,CAC9D,EAAE,KAAK,CAAC,QAAQ,IAAI,YAAY,CAAC;AAnBjC;AAqBA,IAAM,QAAQ,sDAAY,YAAZ,mBAAqB,QAArB,mBAA0B,cAAa;AAE9C,IAAM,gBAAN,MAAoB;AAAA,EACzB,YAAY,SAAuB,UAAgC,CAAC,GAAG;AACrE,UAAM,SAAS,IAAI,eAAe;AAAA,MAChC,MAAM,MAAM,YAAY;AACtB,cAAM;AACN,cAAM;AACN,cAAM,WAAW,MAAM;AACvB,cAAM,QAAQ;AAAA,UACZ;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,OAAO;AAAA,UACT;AAAA,QACF;AAEA,cAAM,UAAS,MAAM,OAAO,QAAQ,OAAO,SAAS,OAAO,OAAO;AAElE,mBAAW,QAAQ,OAAM;AACzB,mBAAW,MAAM;AAAA,MACnB;AAAA,IACF,CAAC;AAED,WAAO,IAAI,SAAS,QAAQ;AAAA,MAC1B,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB,QACb,uBACA;AAAA,QACJ,GAAG,QAAQ;AAAA,MACb;AAAA,MACA,QAAQ,QAAQ;AAAA,MAChB,YAAY,QAAQ;AAAA,IACtB,CAAC;AAAA,EACH;AACF;","names":[]}